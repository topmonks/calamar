name: Test & Deploy

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache node modules
        uses: ./.github/actions/cache-node-modules
      - name: Current timestamp
        uses: ./.github/actions/now
      - name: Build
        env:
          REACT_APP_COMMIT_SHA: ${{ github.sha }}
          REACT_APP_BUILD_TIMESTAMP: ${{ env.NOW }}
          REACT_APP_ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN }}
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build/
  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache node modules
        uses: ./.github/actions/cache-node-modules
        with:
          install: false
      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: build
      - name: Run Cypress
        uses: cypress-io/github-action@v4
        with:
          install: false
          start: npm run start:test
          project: test
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Argos screenshots
        continue-on-error: true
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
        run: npx argos upload test/cypress/screenshots
  preview:
    name: Deploy / Preview
    needs: test
    environment:
      name: development
      url: ${{ steps.pages.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: build
      - name: Current timestamp
        uses: ./.github/actions/now
      - name: Generate client environment
        uses: ./.github/actions/generate-client-env
        env:
          REACT_APP_PUBLISH_TIMESTAMP: ${{ env.NOW }}
          REACT_APP_ROLLBAR_ENV: development
          REACT_APP_ROLLBAR_ENABLED: true
        with:
          file: build/env.js
      - name: Deploy to Cloudflare Pages
        id: pages
        uses: ./.github/actions/deploy-cloudflare-pages
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          path: build
  deploy:
    name: Deploy / Production
    needs: test
    if: github.ref_name == 'master'
    environment:
      name: production
      url: ${{ steps.pages.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: build
      - name: Current timestamp
        uses: ./.github/actions/now
      - name: Generate client environment
        uses: ./.github/actions/generate-client-env
        env:
          REACT_APP_PUBLISH_TIMESTAMP: ${{ env.NOW }}
          REACT_APP_ROLLBAR_ENV: production
          REACT_APP_ROLLBAR_ENABLED: true
        with:
          file: build/env.js
      - name: Deploy to Cloudflare Pages
        id: pages
        uses: ./.github/actions/deploy-cloudflare-pages
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          path: build
