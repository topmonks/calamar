name: Test & Deploy

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - run: env
      - run: echo "${{ github.ref_name }}"
      - run: adsfasd
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build/
  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # - name: Download build artifact
      #   uses: actions/download-artifact@master
      #   with:
      #     name: build
      #     path: build
      # - name: Test
      #   run: |
      #     ls -la .
      #     ls -la node_modules
      #     ls -la build
      # - name: Run Cypress
      #   uses: cypress-io/github-action@v4
      #   with:
      #     install: false
      #     start: npm run start:test
      #     project: test
      #     record: true
      #   env:
      #     CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload Argos screenshots
      #   continue-on-error: true
      #   env:
      #     ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
      #   run: npx argos upload test/cypress/screenshots
  rollup:
    name: Rollup release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Upload release to Rollup
        run: echo "TODO"
      - run: asdf
  deploy:
    name: Deploy
    environment:
      name: development
      url: ${{ steps.pages.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      # - name: Download build artifact
      #   uses: actions/download-artifact@master
      #   with:
      #     name: build
      #     path: build
      - run: |
          mkdir build
          echo "test" >> build/index.html
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@1
        id: pages
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: 777be075f33a54823297bac0af8e1c6c
          projectName: calamar
          directory: build
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}
