name: Deploy to Cloudflare pages

inputs:
  apiToken:
    required: true
    type: string
  accountId:
    required: true
    type: string
  project:
    required: true
    type: string
  branch:
    required: false
    default: ${{ github.ref_name }}
    type: string
  path:
    required: true
    type: string

outputs:
  url:
    value: ${{ steps.pages.outputs.url }}
  aliases:
    value: ${{ steps.pages.outputs.aliases }}

runs:
  using: "composite"
  steps:
    - name: Deploy to Cloudflare Pages
      id: pages
      shell: bash
      run: |
        npx wrangler pages publish "${{ inputs.path }}" --project-name="${{ inputs.project }}" --branch="${{ inputs.branch }}"
        while :; do
          JSON=$(curl -s 'https://api.cloudflare.com/client/v4/accounts/${{ inputs.accountId }}/pages/projects/${{ inputs.project }}/deployments' \
            --header 'Authorization: Bearer ${{ inputs.apiToken }}' | jq -r '[ .result[] | select(.is_skipped == false and .deployment_trigger.metadata.branch == "${{ inputs.branch }}") ] | .[0]')
          echo $JSON
          echo $JSON | jq -r '.latest_stage'
          if [ "$(echo $JSON | jq -r '.latest_stage.name')" != "deploy" ] || [ "$(echo $JSON | jq -r '.latest_stage.status')" != "success" ]; then
            sleep 1
            continue
          fi
          URL=$(echo "$JSON" | jq -r '.url')
          echo $URL
          ALIASES=$(echo "$JSON" | jq -r '.aliases[]')
          echo $ALIASES
          break
        done
        echo "url=${URL}" >> $GITHUB_OUTPUT
        echo "aliases=${ALIASES}" >> $GITHUB_OUTPUT
      env:
        CLOUDFLARE_API_TOKEN: ${{ inputs.apiToken }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.accountId }}
